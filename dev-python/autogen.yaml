simple:
  defaults:
    cat: dev-python
    python_compat: python3+
  generator: pypi-simple-1
  packages:
    - priority:
        # Twisted require version <2.0
        version: 1.3.0
    - m2r2:
        rdepend: '<=dev-python/mistune-0.8.4'
        pydeps:
          - mistune
          - docutils
    - oauthlib:
        pydeps:
          py:3:runtime:
            - pyjwt
            - blinker
            - cryptography
    - pyserial:
        pydeps:
          py:3:build:
            - setuptools
    - constantly:
        pydeps:
          py:3:build:
            - setuptools
            - versioneer
    # Keep temporary. Package archived
    - traceback2:
        pydeps:
          py:3:build:
            - setuptools
            - pbr
          py:3:runtime:
            - linecache2
    # Keep temporary. Package archived
    - linecache2:
        pydeps:
          py:3:build:
            - setuptools
            - pbr
    # TODO: check if it's possible add
    #       PYTHON_REQ_USE="threads(+)"
    #       without a template file
    - lockfile
    - aiobotocore:
        license: Apache-2.0
        pydeps:
          - aiohttp
          - aioitertools
          - botocore
          - wrapt
    - aioboto3:
        license: Apache-2.0
        pydeps:
          - aiobotocore
    - frozenlist:
        pydeps:
          py:3:build:
            - setuptools
            - pbr
    - dnspython:
        license: ISC
        pydeps:
          py:3:build:
            - idna
            - cryptography
          py:3:runtime:
            - idna
            - cryptography
        body: |
          src_prepare() {
            sed -i -e 's|^license =.*|license = {text = "ISC"}|g' pyproject.toml
            distutils-r1_src_prepare
          }


meono_python_builds:
  defaults:
    cat: dev-python
    python_compat: python3+
    du_pep517: meson-python
  generator: pypi-compat-1
  packages:
    - numpy:
        template: numpy.tmpl

hatchling_builds:
  defaults:
    cat: dev-python
    python_compat: python3+
    du_pep517: hatchling
    pydeps:
      py:3:build:
        - hatch-vcs
  generator: pypi-simple-1
  packages:
    - platformdirs:
        desc: "A small Python package for determining appropriate platform-specific dirs"
    - filelock
    - virtualenv:
        pydeps:
          py:3:runtime:
            - distlib
            - filelock
            - platformdirs
    - uvicorn:
        desc: "The lightning-fast ASGI server"
        license: BSD-3-Clause
        pydeps:
          py:all:build:
            - click
            - h11
            - typing-extensions
          py:all:runtime:
            - click
            - h11
            - typing-extensions
    - twisted:
        iuse: conch crypt serial http2
        depend: |
          http2? (
            <=dev-python/h2-5.0.0[${PYTHON_USEDEP}]
            >=dev-python/h2-4.0.0[${PYTHON_USEDEP}]
            >=dev-python/priority-1.1.0[${PYTHON_USEDEP}]
            <dev-python/priority-2.0[${PYTHON_USEDEP}]
          )
        pydeps:
          py:3:build:
            - hatch-vcs
            - incremental
            - hatch-fancy-pypi-readme
          py:3:all:
            - zope-interface
            - constantly
            - automat
            - hyperlink
            - attrs
            - typing-extensions
          use:crypt:
            - pyopenssl
            - service_identity
            - idna
          use:serial:
            - pyserial
          use:conch:
            - cryptography
            - appdirs
            - bcrypt

    - python-sqlparse:
        pypi_name: sqlparse
        license: BSD
        pydeps:
          py:all:build:
            - flake8
          py:all:runtime:
            - flake8


setuptools_builds:
  defaults:
    cat: dev-python
    python_compat: python3+
    du_pep517: setuptools
    pydeps:
      py:all:build:
        - setuptools
  generator: pypi-simple-1
  packages:
    - appdirs:
        # Override description generates with "
        desc: "A small Python module for determining appropriate platform-specific dirs"
    - distlib
    - mistune:
        version: 0.8.4
    - python-mimeparse
    - hyperlink:
        pydeps:
          py:3:runtime:
            - idna
    - versioneer:
        pydeps:
          py:all:
            - tomli

    - jsonpatch:
        pydeps:
          py:3:runtime:
            - jsonpointer

    - httplib2:
        rdepend: app-misc/ca-certificates
        pydeps:
          py:3:runtime:
            - pyparsing
        patches:
          - httplib2-0.12.1-use-system-cacerts.patch

    - aiohttp-socks

    - aiodns:
        pydeps:
          py:all:
            - pycares >= 3
    - aiosignal:
        pydeps:
          - frozenlist
    - aiohttp:
        desc: Async http client/server framework (asyncio)
        pydeps:
          py:all:
            - async_timeout > 3
            - attrs > 17.3.0
            - multidict > 4.5.0
            - yarl > 1
            - typing-extensions
            - aiosignal
            - aiodns
            - charset_normalizer
            - frozenlist
          py:all:build:
            - cython
        body: |
          src_prepare() {
            default
            rm ${S}/examples/__init__.py

            # Drop runtime dep to asynctest used for tests
            sed -e '/^\tasynctest.*/d' -i ${S}/setup.cfg
          }

    - kafka-python
    - aiokafka:
        pydeps:
          py:all:
            - kafka-python
          py:all:build:
            - kafka-python

    - pynacl:
        body: |
          post_src_unpack() {
            mv ${WORKDIR}/PyNaCl-* ${S}
            default
          }
        pydeps:
          py:all:
            - cffi
          py:all:build:
            - cffi

    - netaddr:
        pydeps:
          py:all:build:
            - setuptools

    - pexpect:
        pydeps:
          py:all:runtime:
            - ptyprocess

    - wcwidth:
        body: |
          src_prepare() {
            sed -e 's:--cov-append::' \
              -e 's:--cov-report=html::' \
              -e 's:--cov=wcwidth::' \
              -i tox.ini || die
            distutils-r1_src_prepare
          }

    - prompt_toolkit:
        pydeps:
          py:all:runtime:
            - wcwidth

    - pycurl:
        iuse: curl_ssl_gnutls curl_ssl_nss +curl_ssl_openssl ssl
        rdepend: |
          >=net-misc/curl-7.25.0-r1[ssl=]
          ssl? (
            net-misc/curl[curl_ssl_gnutls(-)=,curl_ssl_nss(-)=,curl_ssl_openssl(-)=,-curl_ssl_axtls(-),-curl_ssl_cyassl(-)]
            curl_ssl_gnutls? ( >=net-libs/gnutls-2.11.0 )
          )
        depend: '${RDEPEND}'
        body: |
          python_configure_all() {
            # Override faulty detection in setup.py, bug #510974.
            export PYCURL_SSL_LIBRARY=${CURL_SSL}
          }


    - pykerberos:
        depend: "app-crypt/mit-krb5"
        rdepend: '${DEPEND}'

    - python-memcached:
        pydeps:
          py:all:runtime:
            - six

    - pyudev:
        inherit:
          - optfeature
        iuse: qt5
        rdepend: "virtual/udev"
        license: 'LGPL-2.1'
        body: |
          pkg_postinst() {
            optfeature "PyQt5 bindings" "dev-python/PyQt5"
          }

    - simplejson:
        license: '|| ( MIT AFL-2.1 )'

    - contextlib2:
        license: 'PSF License'

    - scandir:
        license: 'New BSD License'

    - configparser:
        license: MIT

    - pathlib2:
        license: MIT
        pydeps:
          py:all:runtime:
            - six

    - ecdsa:
        license: MIT

    - decorator:
        license: BSD

    - python-semver:
        license: BSD
        pypi_name: semver
        pydeps:
          py:all:build:
            - setuptools
            - setuptools_scm

    - greenlet:
        license: MIT

    - falcon:
        license: Apache-2.0
        pydeps:
          py:all:build:
            - wheel
            - cython

    - PySDL2:
        rdepend: |
          media-libs/libsdl2
        depend: '${RDEPEND}'

    - pycups:
        rdepend: "net-print/cups"
        depend: 'net-print/cups'
        iuse: examples
        license: GPL-2
        body: |
          python_install_all() {
            if use examples; then
              dodoc -r examples
              docompress -x /usr/share/doc/${PF}/examples
            fi
            distutils-r1_python_install_all
          }

    - python-dateutil:
        license: BSD
        desc: "Extensions to the standard Python datetime module"
        rdepend: 'sys-libs/timezone-data'
        patches:
          - 0001-zoneinfo-Get-timezone-data-from-system-tzdata-2.9.patch
        pydeps:
          py:all:build:
            - six
            - setuptools_scm
          py:all:runtime:
            - six
        body: |
          python_prepare_all() {
            # don't install zoneinfo tarball
            sed -i '/package_data=/d' setup.py || die

            distutils-r1_python_prepare_all
          }

    - vobject:
        license: Apache-2.0
        pydeps:
          py:all:runtime:
            - python-dateutil

    - utidylib:
        license: MIT
        rdepend: 'app-text/tidy-html5'
        body: |
          post_src_unpack() {
            mv uTidylib-* "${S}"
          }

    - python-levenshtein:
        license: GPL-2
        pypy_name: python-Levenshtein
        desc: "Functions for fast computation of Levenshtein distance, and edit operations"
        body: |
          post_src_unpack() {
            mv python-* "${S}"
          }

    - jaraco-functools:
        pypy_name: jaraco.functools
        license: MIT
        desc: "Additional functions used by other projects by developer jaraco"
        pydeps:
          py:all:runtime:
            - more-itertools
            - namespace-jaraco
          py:all:build:
            - more-itertools
            - namespace-jaraco
        body: |
          post_src_unpack() {
            mv jaraco.functools-* "${S}"
          }

    - pysol_cards:
        license: 'Apache-2.0 MIT'
        desc: "Deal PySol FreeCell cards"
        pydeps:
          py:all:runtime:
            - random2
            - six
          py:all:build:
            - six

    # Used by waydroid
    - pyclip:
        license: 'Apache-2.0'
        desc: 'Cross-platform Clipboard module for Python with binary support'
        body: |
          src_prepare() {
            # Fix README.md path.
            sed -i -e 's|docs/README.md|README.md|g' setup.py

            default
          }

    - incremental:
        license: MIT
        desc: 'Incremental is a small library that versions your Python projects'
        pydeps:
          py:all:runtime:
            - click

    - fspath:
        license: AGPL-3.0
        desc: 'Handling path names and executables more comfortable'
        pydeps:
          py:all:runtime:
            - six
          py:all:build:
            - six
            - wheel

    - linuxdoc:
        license: AGPL-3.0
        desc: 'Sphinx-doc extensions for sophisticated C developer'
        pydeps:
          py:all:build:
            - fspath
            - sphinx
            - wheel
            - docutils
          py:all:runtime:
            - fspath
            - sphinx
            - docutils

    - cython:
        pypi_name: cython
        desc: 'A Python to C compiler'
        license: Apache-2.0

    - pyyaml:
        revision:
          6.0.1: 2
        blocker: '!<dev-python/pyyaml-6.0'
        pypi_name: PyYAML
        patches:
          - pyyaml-6.0.1-cython3.patch
        desc: YAML parser and emitter for Python
        homepage: |
          https://pyyaml.org/wiki/PyYAML
          https://pypi.org/project/PyYAML/
          https://github.com/yaml/pyyaml
        license: MIT
        iuse: examples +libyaml
        depend: |
          libyaml? ( dev-libs/libyaml )
        rdepend: |
          libyaml? ( dev-libs/libyaml )
        pydeps:
          use:libyaml:build:
            - cython
          use:libyaml:
            - cython
        body: |
          python_configure_all() {
            DISTUTILS_ARGS=( $(use_with libyaml) )
          }

          python_install_all() {
            distutils-r1_python_install_all
            if use examples; then
              dodoc -r examples
              docompress -x /usr/share/doc/${PF}
            fi
          }

    - python-oracledb:
        pypi_name: oracledb
        license: Apache-2.0 UPL-1.0
        depend: "dev-db/oracle-instantclient-basic"
        rdepend: "dev-db/oracle-instantclient-basic"
        iuse: doc examples
        pydeps:
          py:3:build:
            - setuptools
            - wheel
            - cython
        body: |
          python_install_all() {
            distutils-r1_python_install_all

            if use doc; then
              dohtml -r html/* || die
            fi

            if use examples; then
              docinto examples
              dodoc samples/* || die
            fi

            # Drop wrong paths
            #rm -rf ${D}/usr/cx_Oracle-doc/
          }

    - python-magic:
        license: BSD-2 MIT
        desc: "Access the libmagic file type identification library"
        rdepend: 'sys-apps/file'
        body: |
          src_prepare() {
            mv magic ${PN} || die "error on rename magic directory"
            sed -i -e "s|'magic'|'python-magic'|g" \
              setup.py || die "error on sed setup.py"
            sed -i -e 's|from magic import|from python-magic import|g' \
              python-magic/__init__.py || die "error on sed __init__.py"

            distutils-r1_src_prepare
          }


flit_builds:
  defaults:
    cat: dev-python
    python_compat: python3+
    du_pep517: flit
    pydeps:
      py:all:build:
        - flit_core
  generator: pypi-simple-1
  packages:
    - ptyprocess


poetry_builds:
  defaults:
    cat: dev-python
    python_compat: python3+
    du_pep517: poetry
    pydeps:
      py:all:build:
        - poetry-core
  generator: pypi-simple-1
  packages:
    - terminaltables:
        license: MIT
        body: |
          src_prepare() {
            sed -e '/requires/s:poetry:&-core:' \
              -e '/backend/s:poetry:&.core:' \
              -i pyproject.toml || die

            # Fix terminal_io.py
            sed -e 's|sys.stdout.write|sys.stdout.buffer.write|g' \
              -i terminaltables/terminal_io.py || die

            distutils-r1_src_prepare
          }


custom_github_builds:
  generator: github-1
  defaults:
    cat: dev-python
    github:
      query: tags
  packages:
    - gbinder-python:
        github:
          user: erfanoabdi
          repo: gbinder-python
        desc: Python bindings for libgbinder
